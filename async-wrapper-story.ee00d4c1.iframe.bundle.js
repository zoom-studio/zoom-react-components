"use strict";(self.webpackChunk_zoom_studio_zoom_react_components=self.webpackChunk_zoom_studio_zoom_react_components||[]).push([[2638],{"./source/stories/async-wrapper.story.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Playground:function(){return Playground},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/react/index.js");var _zoom_studio_zoom_js_ts_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@zoom-studio/zoom-js-ts-utils/index.js"),_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./source/components/index.ts"),_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./source/utils/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Utility/AsyncWrapper",component:_components__WEBPACK_IMPORTED_MODULE_2__.Sy,args:{}};const Playground=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components__WEBPACK_IMPORTED_MODULE_2__.Sy,{processor:async processable=>(await(0,_zoom_studio_zoom_js_ts_utils__WEBPACK_IMPORTED_MODULE_1__._v)(1e3),`some-data-${processable}`),processable:":)",children:({isProcessing:isProcessing,processed:processed})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{border:`1px solid ${(0,_utils__WEBPACK_IMPORTED_MODULE_3__.$_)({source:"border",tone:2})}`,color:(0,_utils__WEBPACK_IMPORTED_MODULE_3__.$_)({source:"text"}),margin:"10px 0",borderRadius:8},children:isProcessing?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components__WEBPACK_IMPORTED_MODULE_2__.yC,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components__WEBPACK_IMPORTED_MODULE_2__.Dx,{h1:!0,children:processed})})})});Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"() => {\n  const sampleProcessor = async (processable: string) => {\n    await sleep(1000);\n    return `some-data-${processable}`;\n  };\n  return <>\n      <AsyncWrapper processor={sampleProcessor} processable={':)'}>\n        {({\n        isProcessing,\n        processed\n      }) => <div style={{\n        border: `1px solid ${color({\n          source: 'border',\n          tone: 2\n        })}`,\n        color: color({\n          source: 'text'\n        }),\n        margin: '10px 0',\n        borderRadius: 8\n      }}>\n            {isProcessing ? <Spin /> : <Title h1>{processed}</Title>}\n          </div>}\n      </AsyncWrapper>\n    </>;\n}",...Playground.parameters?.docs?.source}}};const __namedExportsOrder=["Playground"];try{Playground.displayName="Playground",Playground.__docgenInfo={description:"",displayName:"Playground",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["source/stories/async-wrapper.story.tsx#Playground"]={docgenInfo:Playground.__docgenInfo,name:"Playground",path:"source/stories/async-wrapper.story.tsx#Playground"})}catch(__react_docgen_typescript_loader_error){}}}]);