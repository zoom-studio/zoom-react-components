@mixin generate-input-variants($variant) {
  $is-neutral: $variant == neutral;
  $color: if($is-neutral, color(text, 1), color($variant));
  $border-color: if($is-neutral, color(border, 2), color($variant, glassy, 4));
  $shadow-color: if($is-neutral, color(border, 2, glassy, 5), color($variant, glassy, 2));

  &-#{$variant} {
    > .zoomrc-input-label-container {
      border-color: $border-color;
      color: $color;

      &:hover {
        box-shadow: 0 0 0 4px $shadow-color;
      }
    }

    .zoomrc-input-state-message {
      color: $color;
    }
  }
}

@mixin generate-input-sizes($size) {
  $top-bottom-padding: if($size == small, 5px, if($size == normal, 7px, 11px));
  $spin-size: if($size == small, 17px, if($size == normal, 20px, 23px));

  &-#{$size} {
    > .zoomrc-input-label-container {
      .zoomrc-input-label,
      .zoomrc-input {
        padding: $top-bottom-padding 6px;
      }

      .zoomrc-input {
        @include text(common, #{$size});
      }

      .zoomrc-spin-small {
        height: $spin-size;
      }
    }
  }
}

@mixin generate-input-password-button-visibilities($type) {
  $visibility-class: if($type == password, visible, hidden);

  &[type='#{$type}'] {
    & + .type-switch-button {
      > .zoomrc-button-inner-child {
        > .#{$visibility-class} {
          display: initial;
        }
      }
    }
  }
}
